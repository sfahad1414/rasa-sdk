[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rasa-sdk"
version = "3.13.0.dev1"
description = "Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants"
authors = [
    {name = "Rasa Technologies GmbH", email = "hi@rasa.com"}
]
maintainers = [
    {name = "Tom Bocklisch", email = "tom@rasa.com"}
]
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: Apache Software License"
]
keywords = [
    "nlp", "machine-learning", "machine-learning-library", "bot", "bots",
    "botkit", "rasa conversational-agents", "conversational-ai", "chatbot",
    "chatbot-framework", "bot-framework"
]
requires-python = "==3.10.*"
dependencies = [
    "coloredlogs==15.0.1",
    "sanic==25.3.0",
    "typing-extensions==4.13.2",
    "Sanic-Cors==2.2.0",
    "ruamel.yaml==0.18.10",
    "websockets==15.0.1",
    "pluggy==1.5.0",
    "opentelemetry-api==1.16.0",
    "opentelemetry-sdk==1.16.0",
    "opentelemetry-exporter-jaeger==1.16.0",
    "opentelemetry-exporter-otlp==1.16.0",
    "grpcio==1.60.2",
    "protobuf==4.25.7",
    "pydantic==2.11.3",
    "grpcio-health-checking==1.59.5",
    "grpcio-tools==1.60.2"
]

[project.urls]
homepage = "https://rasa.com"
repository = "https://github.com/rasahq/rasa-sdk"
documentation = "https://rasa.com/docs"

[project.optional-dependencies]
dev = [
    "pytest-cov>=4.1.0",
    "coveralls>=3.3.1",
    "pytest>=7.4.4",
    "questionary>=2.0.1",
    "towncrier>=23.11.0",
    "toml>=0.10.2",
    "pep440-version-utils>=0.3.0",
    "semantic_version>=2.10.0",
    "mypy>=1.8.0",
    "sanic-testing>=23.6.0",
    "ruff>=0.3.7",
    "pytest-asyncio>=0.23.6",
    "types-protobuf>=4.25.0.20240428"
]

[tool.setuptools]
# Explicitly list packages to include
packages = ["rasa_sdk", "rasa_sdk.executor", "rasa_sdk.interfaces", "rasa_sdk.forms", "rasa_sdk.events"]
include-package-data = true

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = "rasa_sdk/grpc_py"

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = [
    "rasa_sdk/grpc_py",
    "eggs",
    ".git",
    ".pytest_cache",
    "build",
    "dist",
    ".DS_Store"
]

[tool.towncrier]
package = "rasa_sdk"
package_dir = "rasa_sdk"
filename = "CHANGELOG.mdx"
directory = "./changelog"
underlines = "   "
title_format = "## [{version}] - {project_date}"
template = "./changelog/_template.md.jinja2"
start_string = "<!-- TOWNCRIER -->\n"
issue_format = "[#{issue}](https://github.com/rasahq/rasa-sdk/issues/{issue})"

[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "improvement"
name = "Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = false

[tool.pytest.ini_options]
python_functions = "test_"
asyncio_mode = "auto"

[tool.ruff.lint]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "RUF005"]
select = ["D", "E", "F", "W", "RUF"]

[tool.ruff.lint.pydocstyle]
convention = "google"